# Depends-On: keypair
heat_template_version: 2015-10-15

parameters:
    public_network:
        type: string
        default: public

    image:
        type: string
        default: cirros

    app_port:
        type: number
        default: 8080

resources:
    vip_network:
        type: ../templates/private_network.yaml
        properties:
            name: vip
            public_network: { get_param: public_network }

    members_network:
        type: ../templates/private_network.yaml
        properties:
            name: members
            public_network: { get_param: public_network }

    server_group:
        type: OS::Heat::ResourceGroup
        properties:
            count: 2
            resource_def:
                type: ../templates/server.yaml
                properties:
                    image: { get_param: image }
                    app_port: { get_param: app_port }
                    network: { get_resource: members_network }
                    subnet: { get_attr: [ members_network, resource.ipv4_subnet ] }
                    pool: { get_resource: pool }

    lb:
        type: OS::Octavia::LoadBalancer
        properties:
            vip_subnet: { get_attr: [ vip_network, resource.ipv4_subnet ] }

    listener:
        type: OS::Octavia::Listener
        properties:
            protocol: TERMINATED_HTTPS
            protocol_port: 443
            default_tls_container_ref: "http://192.168.122.143/key-manager/v1/secrets/7b986f0c-d216-4033-95b1-e52cd296ec22"
            connection_limit: 100000
            loadbalancer: { get_resource: lb }

    pool:
        type: OS::Octavia::Pool
        properties:
            lb_algorithm: ROUND_ROBIN
            protocol: HTTP
            listener: { get_resource: listener }

    health_monitor:
        type: OS::Octavia::HealthMonitor
        properties:
            delay: 5
            timeout: 2
            max_retries: 1
            type: HTTP
            pool: { get_resource: pool }

outputs:
    loadbalancer_vip:
        value: { get_attr: [ lb, vip_address ] }
    listener:
        value: { get_attr: [ listener, show ] }
    servers:
        description:
        value: { get_attr: [ server_group, networks ] }
